package org.baattezu.telegrambotdemo.bot.scheduled;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.baattezu.telegrambotdemo.bot.GoalBot;
import org.baattezu.telegrambotdemo.model.GroupChat;
import org.baattezu.telegrambotdemo.model.User;
import org.baattezu.telegrambotdemo.results.ProgressImageGenerator;
import org.baattezu.telegrambotdemo.results.ScheduledResultsGenerator;
import org.baattezu.telegrambotdemo.service.ChatService;
import org.baattezu.telegrambotdemo.service.UserService;
import org.baattezu.telegrambotdemo.utils.BotMessagesEnum;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.methods.send.SendPhoto;
import org.telegram.telegrambots.meta.api.objects.InputFile;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

import java.io.IOException;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.stream.Collectors;

@Component
@RequiredArgsConstructor
@Slf4j
public class GroupMessageScheduler {

    private final GoalBot telegramBot;
    private final ChatService chatService;
    private final UserService userService;

    private final ProgressImageGenerator progressImageGenerator;
    private final ScheduledResultsGenerator top5UsersResultsGenerator;


    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ —Å—É–±–±–æ—Ç–∞–º –≤ 10:00
    @Scheduled(cron = "0 0 9 * * 6")
    public void sendSaturdayMessagesToGroups() {
        sendMessages(BotMessagesEnum.SCHEDULED_SATURDAY_MESSAGE.getMessage());
    }

    @Scheduled(cron = "05 18 23 * * 6")
    public void generateSaturdayResultsToGroups() {
        var gChats = chatService.getAllChats();
        for (GroupChat gc : gChats) {
            sendMessages(progressImageGenerator.formatTable(String.valueOf(gc.getId()), true));
        }
    }

    @Scheduled(cron = "05 50 23 * * 6")
    public void deleteWeekResultsToGroups() {
        var gChats = chatService.getAllChats();
        for (GroupChat gc : gChats) {
            progressImageGenerator.deleteResults(gc.getId().toString());
        }
    }

    // –ñ–µ–ª–∞–Ω–∏–µ —É—Å–ø–µ—Ö–æ–≤ –∫–∞–∂–¥–æ–µ —É—Ç—Ä–æ –≤ 9:00
    @Scheduled(cron = "0 0 9 * * *")
    public void sendMorningSuccessMessages() {
        sendMessages("üåü –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! –£—Å–ø–µ—Ö–æ–≤ –≤–∞–º —Å–µ–≥–æ–¥–Ω—è –∏ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–Ω—è! üåü");
    }
    @Scheduled(cron = "0 0 12 * * *")
    public void sendDailyMotivation() {
        List<String> quotes = List.of(
                "üåü –í–µ—Ä—å –≤ —Å–µ–±—è –∏ –∏–¥–∏ –≤–ø–µ—Ä–µ–¥! üåü",
                "üí™ –ö–∞–∂–¥—ã–π –¥–µ–Ω—å ‚Äî —ç—Ç–æ –Ω–æ–≤–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å –ª—É—á—à–µ! üí™",
                "üî• –ù–µ –∂–¥–∏ —á—É–¥–∞, —Ç–≤–æ—Ä–∏ –µ–≥–æ —Å–∞–º! üî•",
                "üöÄ –£—Å–ø–µ—Ö ‚Äî —ç—Ç–æ –¥–≤–∏–∂–µ–Ω–∏–µ –æ—Ç –Ω–µ—É–¥–∞—á–∏ –∫ –Ω–µ—É–¥–∞—á–µ –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ —ç–Ω—Ç—É–∑–∏–∞–∑–º–∞! üöÄ"
        );
        String randomQuote = quotes.get(new Random().nextInt(quotes.size()));
        sendMessages(randomQuote + "\n–£—Å–ø–µ—Ö–æ–≤ –≤–∞–º —Å–µ–≥–æ–¥–Ω—è!");
    }

    @Scheduled(cron = "0 0 12 * * 3")  // –°—Ä–µ–¥–∞, 12:00
    public void sendMidweekProgressReminder() {
        sendMessages("üîÑ –°–µ—Ä–µ–¥–∏–Ω–∞ –Ω–µ–¥–µ–ª–∏! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–∏ —Ü–µ–ª–∏ –∏ —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–π—Ç–µ –ø–ª–∞–Ω –Ω–∞ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –¥–Ω–∏. " +
                "–£—Å–ø–µ—Ö –ø—Ä–∏—Ö–æ–¥–∏—Ç –∫ —Ç–µ–º, –∫—Ç–æ –¥–µ–π—Å—Ç–≤—É–µ—Ç! üí™");
    }

    @Scheduled(cron = "0 0 17 * * 5")  // –ü—è—Ç–Ω–∏—Ü–∞, 17:00
    public void sendEndOfWeekReminder() {
        sendMessages("‚è≥ –ù–µ–¥–µ–ª—è –ø–æ–¥—Ö–æ–¥–∏—Ç –∫ –∫–æ–Ω—Ü—É! –û—Å—Ç–∞–ª–æ—Å—å –Ω–µ–º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤–∞—à–∏—Ö –∑–∞–¥–∞—á. " +
                "–°–¥–µ–ª–∞–π—Ç–µ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ä—ã–≤–∫–∏ –∏ –∑–∞–≤–µ—Ä—à–∏—Ç–µ –Ω–µ–¥–µ–ª—é –Ω–∞ –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–π –Ω–æ—Ç–µ! üí•");
    }

    // –ó–∞–ø–∏—Å—å —Ü–µ–ª–µ–π –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é –ø–æ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å—è–º
    @Scheduled(cron = "0 0 10 * * 7")
    public void sendWeeklyGoalReminder() {
        sendMessages("üìù –í—Ä–µ–º—è –∑–∞–ø–∏—Å–∞—Ç—å —Ü–µ–ª–∏ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é! " +
                "–ö–∞–∫–∏–µ –∑–∞–¥–∞—á–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å? –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ —Ü–µ–ª—è–º–∏! üí™");
    }

    // –ü–æ–¥–≤–µ–¥–µ–Ω–∏–µ –∏—Ç–æ–≥–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é –ø–æ —Å—É–±–±–æ—Ç–∞–º
    @Scheduled(cron = "0 0 18 * * 6")
    public void sendWeeklyResultsReminder() {
        sendMessages("üìä –ü—Ä–∏—à–ª–æ –≤—Ä–µ–º—è –ø–æ–¥–≤–µ—Å—Ç–∏ –∏—Ç–æ–≥–∏ –∑–∞ –Ω–µ–¥–µ–ª—é! –ö–∞–∫ –ø—Ä–æ–¥–≤–∏–≥–∞–µ—Ç—Å—è –≤–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å? " +
                "–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏, —á—Ç–æ–±—ã –≤–¥–æ—Ö–Ω–æ–≤–∏—Ç—å –æ—Å—Ç–∞–ª—å–Ω—ã—Ö! üåü");
    }

    @Scheduled(cron = "0 0 10 1 * ?")  // –ü–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ –∫–∞–∂–¥–æ–≥–æ –º–µ—Å—è—Ü–∞
    public void sendSmallStepsReminder() {
        sendMessages("üö∂‚Äç‚ôÇÔ∏è –í–∞–∂–Ω–æ –¥–µ–ª–∞—Ç—å –º–∞–ª–µ–Ω—å–∫–∏–µ —à–∞–≥–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å. –ë–æ–ª—å—à–∏–µ —É—Å–ø–µ—Ö–∏ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å –º–∞–ª–æ–≥–æ, " +
                "–Ω–µ –∑–∞–±—ã–≤–∞–π—Ç–µ —Å—Ç–∞–≤–∏—Ç—å —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ —Ü–µ–ª–∏ –∏ –¥–≤–∏–≥–∞—Ç—å—Å—è –∫ –Ω–∏–º —à–∞–≥ –∑–∞ —à–∞–≥–æ–º! üèÜ");
    }
    @Scheduled(cron = "0 0 10 * * 4")  // –ß–µ—Ç–≤–µ—Ä–≥, 10:00
    public void sendFeedbackRequest() {
        sendMessages("üìù –ú—ã —Ö–æ—Ç–∏–º —É—Å–ª—ã—à–∞—Ç—å –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ! –ö–∞–∫ –≤–∞–º –Ω–∞—à–∞ —Ä–∞–±–æ—Ç–∞ –∏ –±–æ—Ç? " +
                "–ß—Ç–æ –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å? –û—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–∑—ã–≤ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –º—ã –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –≤–∞—à–µ–º—É –º–Ω–µ–Ω–∏—é! üí¨");
    }

    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å—è–º –≤ 11:00
    @Scheduled(cron = "0 0 10 * * 7")
    public void sendSundayMessagesToGroups() {
        sendResultsMessages();
    }

    private void sendResultsMessages() {
        List<String> groupChatIds = getGroupChatIds();

        for (String chatId : groupChatIds) {

            SendMessage groupResults1 = new SendMessage();
            groupResults1.setChatId(chatId);
            groupResults1.setText("\uD83C\uDF8A\uD83C\uDF8A\uD83C\uDF8A\uD83C\uDF8A\uD83C" +
                    "\uDF8A\uD83C\uDF8A\uD83C\uDF8A\uD83C\uDF8A\uD83C\uDF8A\uD83C\uDF8A\uD83C" +
                    "\uDF8A\uD83C\uDF8A\uD83C\uDF8A\uD83C\uDF8A");
            groupResults1.enableMarkdown(true);

            SendMessage groupResults = new SendMessage();
            groupResults.setChatId(chatId);
            groupResults.setText(top5UsersResultsGenerator.getTop5UsersInGroupMessage(chatId));
            groupResults.enableMarkdown(true);

            SendMessage top5GoalsAndResults = new SendMessage();
            top5GoalsAndResults.setChatId(chatId);
            top5GoalsAndResults.setText(top5UsersResultsGenerator.getTop5UsersGoalsAndResults(chatId));
            top5GoalsAndResults.enableHtml(true);

            try {
                telegramBot.execute(groupResults1);
                telegramBot.execute(groupResults);
                telegramBot.execute(top5GoalsAndResults);
            } catch (TelegramApiException e) {
                e.printStackTrace(); // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
            }
        }
    }

    private void sendMessages(String messageText) {
        List<String> groupChatIds = getGroupChatIds();

        for (String chatId : groupChatIds) {
            SendMessage message = new SendMessage();
            message.setChatId(chatId);
            message.setText(messageText);

            try {
                telegramBot.execute(message);
            } catch (TelegramApiException e) {
                e.printStackTrace(); // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
            }
        }
    }

    private List<String> getGroupChatIds() {
        var chats = chatService.getAllChats();
        return chats.stream().map(gc -> String.valueOf(gc.getId())).collect(Collectors.toList());
    }
}